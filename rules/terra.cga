/**
 * File:    terra.cga
 * Created: 17 Jan 2023 16:07:59 GMT
 * Author:  sbarr
 */

version "2021.1"




@Order(1) @Range(min=0, max=4, stepsize=1, restricted=false) 
attr NbrOfRightLanes 	= _getInitialRightLanes
@Order(2) @Enum("yellow","white","none") 
attr Centerline 		= "yellow"
										
# Typically, the width values are overriden by the shape parameters, however in case no shape parameters are available (e.g. on Junction or Freeway shapes of nodes), the texture coordinates contain the needed values
@Hidden @Order(3) @Range(min=3.5, max=30, restricted=false) @Distance
attr streetWidth 		= geometry.dv(0,unitSpace)				# REALWORLD-distance in V-direction corresponds to width of street (in case the geometry does not contain rounded entry geometry)
@Hidden @Order(4) @Range(min=1, max=6, restricted=false) @Distance
attr laneWidth 			= streetWidth/geometry.dv(0,uvSpace)	# note that TEXTURE-distance in V-direction corresponds to number of lanes (as generated by CityEngine)

const TextureFolder 	= "Streets/"
const SidewalkHeight 	= 0.2  									# height of sidewalk (and depth of curbs)

const nLanesTotal		= rint(streetWidth/laneWidth)
const oneWay			= NbrOfRightLanes<=0 || NbrOfRightLanes>=nLanesTotal

_getInitialRightLanes 	= case nLanesTotal>2: rint(nLanesTotal/2+0.01) 
						  else				: 30%: rint(nLanesTotal/2) 40%: nLanesTotal else: 0   # adding some randomness to get a more diversified default appeareance


# RULES

@StartRule
Street -->			# split away the side geometry on the streets 
	split(v,uvSpace,0){ -geometry.vMin: Asphalt 		# the lanes start at v-coord 0 i.e. everything below can be splitted away (= asphalt)
					  | nLanesTotal	  : Lanes 			# the lanes end at v-coord nLanesTotal
					  | ~1			  : Asphalt }		# all remaining geometry beyond v-coord nLanesTotal can be split away

Lanes -->
	case Centerline=="none" || oneWay:  		# LANE WITHOUT CENTERLINE: these textures can be repeated also in v-direction, i.e. every lane contains ONE edge line on the texture
		scaleUV(0,1,nLanesTotal*256/(nLanesTotal*256+18))		# v-coord: texture image has 4 lanes (see above*)... and getting rid of the repeating edge line by cutting away a part of the texture (one lane is 256 px in the texture and a line is 18 px wide))
		LanesTexture("path.jpg",4)
	else:										# LANE WITH CENTERLINE: note that centerline is a double line - this influence the mapping method (pls compare with the non-centerline case below)
		translateUV(0,0,4-NbrOfRightLanes)  					# number of lanes which the texture (with its 8 lanes) must be translated (in v-dir) so that its center is placed on street center
		LanesTexture("path.jpg",8)
										
LanesTexture(texFile,texNLanes) -->
	tileUV(0,~14,0)							# the tileUV operation makes sure that one unit in u-space corresponds to approx 14 meters, the v-coord is not touched in the case of 0 as parameter
	scaleUV(0,1,1/texNLanes)				# scaling the v coord for the texture (e.g. a street with 2 lanes has v coords from 0 to 2, this means it has to map onto 0 to 2/8 on our texture with its 8 lanes)	
	texture(TextureFolder + "Lanes/" + texFile)

Asphalt -->
	tileUV(0,14,14) texture(TextureFolder + "Lanes/path.jpg")


# Other default Start Rules for Network Shapes

Joint 				--> Lanes
Junction 			--> Lanes
Freeway 			--> Lanes
FreewayEntry 		--> Lanes
Crossing 			--> Asphalt		
Roundabout 			--> Asphalt
RoundaboutIsland 	--> Asphalt


# Sidewalk

Sidewalk -->
	split(v,unitSpace,0){ SidewalkHeight: Curbs | ~1:  Pavement }

Curbs --> 
	extrude(world.y,SidewalkHeight)
  	tileUV(0,~2,'1) texture(TextureFolder + "Sidewalks/curbs_2m.jpg")

Pavement -->
	translate(rel,world,0,SidewalkHeight,0)
	tileUV(0,~2,'1) texture(TextureFolder + "Sidewalks/calcada2.jpg")




